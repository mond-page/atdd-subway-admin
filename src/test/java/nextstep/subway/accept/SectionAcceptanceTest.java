package nextstep.subway.accept;

import org.junit.jupiter.api.Test;

class SectionAcceptanceTest {

    /**
     *  Given 라인을 만들고
     *        노선의 역 사이에 새로운 구간 추가한다
     *  When 해당 노선을 조회하면
     *  Then 추가된 구간을 찾을 수 있다
     */
    @Test
    void 역_사이에_새로운_구간_추가시_노선에서_조회가능() {
    }

    /**
     *  Given 라인을 만들고
     *        노선 상행선에 새로운 구간 추가한다
     *  When 해당 노선을 조회하면
     *  Then 추가된 구간을 첫 번째로 찾을 수 있다
     */
    @Test
    void 상행선에_새로운_구간_추가시_노선_첫_번째에서_조회가능() {
    }

    /**
     * Given 라인을 만들고
     *       노선 하행선에 새로운 구간 추가한다
     * When 해당 노선을 조회하면
     * Then 추가된 구간을 마지막에 찾을 수 있다
     */
    @Test
    void 하행선에_새로운_구간_추가시_노선_마지막에서_조회가능() {
    }

    /**
     *  Given 라인을 만들고
     *  When 기존 구간의 길이보다 같거나 큰 새로운 구간 추가하면
     *  Then 등록할 수 없다는 에러가 발생한다
     */
    @Test
    void 역_사이_길이보다_같거나_큰_새로운_구간은_등록불가() {
    }

    /**
     *  Given 라인을 만들고
     *  When 이미 등록된 구간을 추가하면
     *  Then 등록할 수 없다는 에러가 발생
     */
    @Test
    void 기존에_있는_구간_추가시_등록불가() {
    }

    /**
     * Given 라인을 만들고
     * When 상, 하행선 모두 새로운 값을 가진 새로운 구간 추가하면
     * Then 등록할 수 없다는 에러가 발생
     */
    @Test
    void 상_하행선_모두_해당_노선이_아닌_구간_추가시_등록불가() {
    }
}
